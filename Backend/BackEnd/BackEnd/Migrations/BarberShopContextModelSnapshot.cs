// <auto-generated />
using System;
using BackEnd.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(BarberShopContext))]
    partial class BarberShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiNhanh", b =>
                {
                    b.Property<int>("MaCN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCN"));

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<string>("TenCN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaCN");

                    b.ToTable("ChiNhanh");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDH", "MaSP");

                    b.HasIndex("MaSP");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaHD")
                        .HasColumnType("int");

                    b.Property<int>("MaDV")
                        .HasColumnType("int");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaHD", "MaDV");

                    b.HasIndex("MaDV");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.CuaHang", b =>
                {
                    b.Property<int>("MaCH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCH"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCH")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaCH");

                    b.ToTable("CuaHang");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.CustomUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<int?>("MaTCT")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DichVu", b =>
                {
                    b.Property<int>("MaDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDV"));

                    b.Property<double>("GiaDV")
                        .HasColumnType("float");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<int?>("MaLDV")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDV");

                    b.HasIndex("MaLDV");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDH"));

                    b.Property<string>("DiaChiGH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThaiDH")
                        .HasColumnType("int");

                    b.HasKey("MaDH");

                    b.HasIndex("Id");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.HoaDon", b =>
                {
                    b.Property<int>("MAHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MAHD"));

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("MAHD");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LichHen", b =>
                {
                    b.Property<int>("MaLH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLH"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iduser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<int?>("MaDV")
                        .HasColumnType("int");

                    b.Property<int?>("MaTCT")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLH");

                    b.HasIndex("MaCN");

                    b.HasIndex("MaDV");

                    b.HasIndex("MaTCT");

                    b.ToTable("LichHen");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LoaiDV", b =>
                {
                    b.Property<int>("MaLDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLDV"));

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<string>("TenLDV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLDV");

                    b.ToTable("LoaiDV");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LoaiSP", b =>
                {
                    b.Property<int>("MaLSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLSP"));

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<string>("TenLSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLSP");

                    b.ToTable("LoaiSP");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.SanPham", b =>
                {
                    b.Property<int>("MaSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSP"));

                    b.Property<double>("GiaSP")
                        .HasColumnType("float");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaLSP")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaCH");

                    b.HasIndex("MaLSP");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ThoCatToc", b =>
                {
                    b.Property<int>("MaTCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTCT"));

                    b.Property<int?>("MaCH")
                        .HasColumnType("int");

                    b.Property<int?>("MaCN")
                        .HasColumnType("int");

                    b.Property<string>("TenTCT")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTCT");

                    b.ToTable("ThoCatToc");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "695d8adb-ec67-4bc4-b65f-728e675f3eeb",
                            ConcurrencyStamp = "7094893c-d6f5-4093-b082-db78466eba8e",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "91a26046-f4f7-4e3d-82b0-3b20be09614e",
                            ConcurrencyStamp = "9c78b8d7-e372-4906-9598-b1b19aa2b5aa",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "a2db4f4b-5d8b-4c39-9783-b2bfb84727e5",
                            ConcurrencyStamp = "d3dafc20-99f1-4815-bef0-ceedda340703",
                            Name = "Owner",
                            NormalizedName = "OWNER"
                        },
                        new
                        {
                            Id = "00fa305a-2b86-47a5-98d6-2bcab2a1914a",
                            ConcurrencyStamp = "6feaf320-7be5-4a76-86c7-c7c06c243762",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "7c7e682b-35e8-40ed-a968-d65880bec1f8",
                            ConcurrencyStamp = "95eea9aa-98f3-4fe6-92ca-8f5641cd052a",
                            Name = "Baber",
                            NormalizedName = "BABER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiTietDonHang", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DonHangCT_DonHang");

                    b.HasOne("BARBEER_SHOP.DATA.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DonHangCT_SanPham");

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiTietHoaDon", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.DichVu", "DichVu")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaDV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HoaDonCT_DichVu");

                    b.HasOne("BARBEER_SHOP.DATA.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HoaDonCT_HoaDon");

                    b.Navigation("DichVu");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DichVu", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.LoaiDV", "LoaiDV")
                        .WithMany("DichVus")
                        .HasForeignKey("MaLDV");

                    b.Navigation("LoaiDV");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DonHang", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.CustomUser", "CustomUser")
                        .WithMany("DonHang")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomUser");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LichHen", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.ChiNhanh", "ChiNhanh")
                        .WithMany("LichHens")
                        .HasForeignKey("MaCN");

                    b.HasOne("BARBEER_SHOP.DATA.DichVu", "DichVu")
                        .WithMany("LichHens")
                        .HasForeignKey("MaDV");

                    b.HasOne("BARBEER_SHOP.DATA.ThoCatToc", "ThoCatToc")
                        .WithMany("LichHens")
                        .HasForeignKey("MaTCT");

                    b.Navigation("ChiNhanh");

                    b.Navigation("DichVu");

                    b.Navigation("ThoCatToc");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.SanPham", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.CuaHang", "CuaHang")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaCH");

                    b.HasOne("BARBEER_SHOP.DATA.LoaiSP", "LoaiSP")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLSP");

                    b.Navigation("CuaHang");

                    b.Navigation("LoaiSP");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARBEER_SHOP.DATA.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BARBEER_SHOP.DATA.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ChiNhanh", b =>
                {
                    b.Navigation("LichHens");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.CuaHang", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.CustomUser", b =>
                {
                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DichVu", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("LichHens");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LoaiDV", b =>
                {
                    b.Navigation("DichVus");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.LoaiSP", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("BARBEER_SHOP.DATA.ThoCatToc", b =>
                {
                    b.Navigation("LichHens");
                });
#pragma warning restore 612, 618
        }
    }
}
